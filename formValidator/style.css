@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap');

/* we can creat css custom properties which are variables in css.
for this we need to define a scope (:root in the following line)
so we can use this variables anywhere.
then we create the variables with using --
*/

:root {
    --success-color:#2ecc71;
    --error-color:#e74c3c;
}

* {
    box-sizing: border-box;
}

body {
    background-color: #f9fafb;
    font-family: 'Open Sans', sans-serif;
    display: flex;
    /* with aligning and justifying the items center and 
    using min-height 100vh we let the content to accupy whome view height */
    align-items: center;  
    justify-content: center;
    min-height: 100vh;
    margin: 0;
}

.container {
    background-color:#fff ;
    border-radius: 5px;
    box-shadow:0 2px 10px rgba(0, 0, 0, 0.3) ;
    width: 400px;
}

h2 {
    text-align: center;
    margin: 0 0 20px;
}

.form {
    padding: 30px 40px;
}

.form-control {
    margin-bottom: 10px;
    padding-bottom: 20px;
    /* position is relative because we are going to 
    put enother element inside form-control with an absolute position. 
    Absolute position element always goes into relative position element */
    position: relative; 
}

.form-control label {
    color: #777;

    /* labels are "display inline by default" but 
    if want them to go to their own line we make their display "block" */
    display: block;
    margin-bottom: 5px;
}

.form-control input {
    border: 2px solid #f0f0f0;
    border-radius: 4px;
    display: block;
    width: 100%;
    padding: 10px;
    font-size: 14px;
}

/* there is an outline borde in the "focus state" 
to remove it we should write the bellow code */
.form-control input:focus {
    outline: 0;
    border-color: #777;
}

/* If we want to have different border colours in different "focus sates": */

/* for success input focous state: */
.form-control.success input {
    border-color: var(--success-color);
}

/* for error input focus state: */

.form-control.error input {
    border-color: var(--error-color);
}

.form-control small {
    position: absolute;
    bottom: 0;
    left: 0;
    /* assign the visibility to hidden because
    we want the error message apear only when the error happens */
    visibility: hidden;
}

.form-control.error small {

    /* if form-control has a error class on it we want the small sclass
    to be visible: */
    visibility: visible;
}

.form button {
    cursor: pointer;
    background-color: #3498db;
    border: 2px solid #3498db;
    border-radius: 4px;
    color: #fff;
    display: block;
    font-size: 16px;
    padding: 10px;
    margin-top: 20px;
    width: 100%;
}
